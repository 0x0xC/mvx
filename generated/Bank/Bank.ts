// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClearFunds extends ethereum.Event {
  get params(): ClearFunds__Params {
    return new ClearFunds__Params(this);
  }
}

export class ClearFunds__Params {
  _event: ClearFunds;

  constructor(event: ClearFunds) {
    this._event = event;
  }

  get game(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get receivedShares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EmergencyHaltGame extends ethereum.Event {
  get params(): EmergencyHaltGame__Params {
    return new EmergencyHaltGame__Params(this);
  }
}

export class EmergencyHaltGame__Params {
  _event: EmergencyHaltGame;

  constructor(event: EmergencyHaltGame) {
    this._event = event;
  }

  get gameAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MaxWinChanged extends ethereum.Event {
  get params(): MaxWinChanged__Params {
    return new MaxWinChanged__Params(this);
  }
}

export class MaxWinChanged__Params {
  _event: MaxWinChanged;

  constructor(event: MaxWinChanged) {
    this._event = event;
  }

  get oldMax(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMax(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PayFunds extends ethereum.Event {
  get params(): PayFunds__Params {
    return new PayFunds__Params(this);
  }
}

export class PayFunds__Params {
  _event: PayFunds;

  constructor(event: PayFunds) {
    this._event = event;
  }

  get game(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReserveFunds extends ethereum.Event {
  get params(): ReserveFunds__Params {
    return new ReserveFunds__Params(this);
  }
}

export class ReserveFunds__Params {
  _event: ReserveFunds;

  constructor(event: ReserveFunds) {
    this._event = event;
  }

  get game(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateGames extends ethereum.Event {
  get params(): UpdateGames__Params {
    return new UpdateGames__Params(this);
  }
}

export class UpdateGames__Params {
  _event: UpdateGames;

  constructor(event: UpdateGames) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class UpdateGuardian extends ethereum.Event {
  get params(): UpdateGuardian__Params {
    return new UpdateGuardian__Params(this);
  }
}

export class UpdateGuardian__Params {
  _event: UpdateGuardian;

  constructor(event: UpdateGuardian) {
    this._event = event;
  }

  get guardianAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class UpdateUser extends ethereum.Event {
  get params(): UpdateUser__Params {
    return new UpdateUser__Params(this);
  }
}

export class UpdateUser__Params {
  _event: UpdateUser;

  constructor(event: UpdateUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get receivedUnderlying(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Bank extends ethereum.SmartContract {
  static bind(address: Address): Bank {
    return new Bank("Bank", address);
  }

  bankToken(): Address {
    let result = super.call("bankToken", "bankToken():(address)", []);

    return result[0].toAddress();
  }

  try_bankToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("bankToken", "bankToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentDebt(): BigInt {
    let result = super.call("currentDebt", "currentDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentDebt", "currentDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  enabledGames(param0: Address): boolean {
    let result = super.call("enabledGames", "enabledGames(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_enabledGames(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("enabledGames", "enabledGames(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getMaxWin(): BigInt {
    let result = super.call("getMaxWin", "getMaxWin():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMaxWin(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMaxWin", "getMaxWin():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isSupportedToken(token: Address): boolean {
    let result = super.call(
      "isSupportedToken",
      "isSupportedToken(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );

    return result[0].toBoolean();
  }

  try_isSupportedToken(token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSupportedToken",
      "isSupportedToken(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxWin(): BigInt {
    let result = super.call("maxWin", "maxWin():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxWin(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxWin", "maxWin():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserves(): BigInt {
    let result = super.call("reserves", "reserves():(uint256)", []);

    return result[0].toBigInt();
  }

  try_reserves(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("reserves", "reserves():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  underlyingToken(): Address {
    let result = super.call(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_underlyingToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  whitelistGuardians(param0: Address): boolean {
    let result = super.call(
      "whitelistGuardians",
      "whitelistGuardians(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistGuardians(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistGuardians",
      "whitelistGuardians(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelistedDepositors(param0: Address): boolean {
    let result = super.call(
      "whitelistedDepositors",
      "whitelistedDepositors(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistedDepositors(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistedDepositors",
      "whitelistedDepositors(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _underlyingToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClearFundsCall extends ethereum.Call {
  get inputs(): ClearFundsCall__Inputs {
    return new ClearFundsCall__Inputs(this);
  }

  get outputs(): ClearFundsCall__Outputs {
    return new ClearFundsCall__Outputs(this);
  }
}

export class ClearFundsCall__Inputs {
  _call: ClearFundsCall;

  constructor(call: ClearFundsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClearFundsCall__Outputs {
  _call: ClearFundsCall;

  constructor(call: ClearFundsCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class EmergencyHaltGameCall extends ethereum.Call {
  get inputs(): EmergencyHaltGameCall__Inputs {
    return new EmergencyHaltGameCall__Inputs(this);
  }

  get outputs(): EmergencyHaltGameCall__Outputs {
    return new EmergencyHaltGameCall__Outputs(this);
  }
}

export class EmergencyHaltGameCall__Inputs {
  _call: EmergencyHaltGameCall;

  constructor(call: EmergencyHaltGameCall) {
    this._call = call;
  }

  get game(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EmergencyHaltGameCall__Outputs {
  _call: EmergencyHaltGameCall;

  constructor(call: EmergencyHaltGameCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class PayFundsCall extends ethereum.Call {
  get inputs(): PayFundsCall__Inputs {
    return new PayFundsCall__Inputs(this);
  }

  get outputs(): PayFundsCall__Outputs {
    return new PayFundsCall__Outputs(this);
  }
}

export class PayFundsCall__Inputs {
  _call: PayFundsCall;

  constructor(call: PayFundsCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PayFundsCall__Outputs {
  _call: PayFundsCall;

  constructor(call: PayFundsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReserveFundsCall extends ethereum.Call {
  get inputs(): ReserveFundsCall__Inputs {
    return new ReserveFundsCall__Inputs(this);
  }

  get outputs(): ReserveFundsCall__Outputs {
    return new ReserveFundsCall__Outputs(this);
  }
}

export class ReserveFundsCall__Inputs {
  _call: ReserveFundsCall;

  constructor(call: ReserveFundsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReserveFundsCall__Outputs {
  _call: ReserveFundsCall;

  constructor(call: ReserveFundsCall) {
    this._call = call;
  }
}

export class SetDepositorCall extends ethereum.Call {
  get inputs(): SetDepositorCall__Inputs {
    return new SetDepositorCall__Inputs(this);
  }

  get outputs(): SetDepositorCall__Outputs {
    return new SetDepositorCall__Outputs(this);
  }
}

export class SetDepositorCall__Inputs {
  _call: SetDepositorCall;

  constructor(call: SetDepositorCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetDepositorCall__Outputs {
  _call: SetDepositorCall;

  constructor(call: SetDepositorCall) {
    this._call = call;
  }
}

export class SetGamesCall extends ethereum.Call {
  get inputs(): SetGamesCall__Inputs {
    return new SetGamesCall__Inputs(this);
  }

  get outputs(): SetGamesCall__Outputs {
    return new SetGamesCall__Outputs(this);
  }
}

export class SetGamesCall__Inputs {
  _call: SetGamesCall;

  constructor(call: SetGamesCall) {
    this._call = call;
  }

  get a(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetGamesCall__Outputs {
  _call: SetGamesCall;

  constructor(call: SetGamesCall) {
    this._call = call;
  }
}

export class SetGuardianCall extends ethereum.Call {
  get inputs(): SetGuardianCall__Inputs {
    return new SetGuardianCall__Inputs(this);
  }

  get outputs(): SetGuardianCall__Outputs {
    return new SetGuardianCall__Outputs(this);
  }
}

export class SetGuardianCall__Inputs {
  _call: SetGuardianCall;

  constructor(call: SetGuardianCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetGuardianCall__Outputs {
  _call: SetGuardianCall;

  constructor(call: SetGuardianCall) {
    this._call = call;
  }
}

export class SetMaxWinCall extends ethereum.Call {
  get inputs(): SetMaxWinCall__Inputs {
    return new SetMaxWinCall__Inputs(this);
  }

  get outputs(): SetMaxWinCall__Outputs {
    return new SetMaxWinCall__Outputs(this);
  }
}

export class SetMaxWinCall__Inputs {
  _call: SetMaxWinCall;

  constructor(call: SetMaxWinCall) {
    this._call = call;
  }

  get newMax(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxWinCall__Outputs {
  _call: SetMaxWinCall;

  constructor(call: SetMaxWinCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
