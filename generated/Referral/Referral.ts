// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateReferralCode extends ethereum.Event {
  get params(): CreateReferralCode__Params {
    return new CreateReferralCode__Params(this);
  }
}

export class CreateReferralCode__Params {
  _event: CreateReferralCode;

  constructor(event: CreateReferralCode) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referralId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get referralCode(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateCommission extends ethereum.Event {
  get params(): UpdateCommission__Params {
    return new UpdateCommission__Params(this);
  }
}

export class UpdateCommission__Params {
  _event: UpdateCommission;

  constructor(event: UpdateCommission) {
    this._event = event;
  }

  get referralId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commission(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateGame extends ethereum.Event {
  get params(): UpdateGame__Params {
    return new UpdateGame__Params(this);
  }
}

export class UpdateGame__Params {
  _event: UpdateGame;

  constructor(event: UpdateGame) {
    this._event = event;
  }

  get game(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class UpdateReferralCodeByUser extends ethereum.Event {
  get params(): UpdateReferralCodeByUser__Params {
    return new UpdateReferralCodeByUser__Params(this);
  }
}

export class UpdateReferralCodeByUser__Params {
  _event: UpdateReferralCodeByUser;

  constructor(event: UpdateReferralCodeByUser) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get code(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Referral extends ethereum.SmartContract {
  static bind(address: Address): Referral {
    return new Referral("Referral", address);
  }

  baseCommissions(param0: BigInt): BigInt {
    let result = super.call(
      "baseCommissions",
      "baseCommissions(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_baseCommissions(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "baseCommissions",
      "baseCommissions(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCodeId(code: string, player: Address): BigInt {
    let result = super.call(
      "getCodeId",
      "getCodeId(string,address):(uint256)",
      [ethereum.Value.fromString(code), ethereum.Value.fromAddress(player)]
    );

    return result[0].toBigInt();
  }

  try_getCodeId(code: string, player: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCodeId",
      "getCodeId(string,address):(uint256)",
      [ethereum.Value.fromString(code), ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ids(): BigInt {
    let result = super.call("ids", "ids():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ids(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ids", "ids():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referralCodes(param0: BigInt): string {
    let result = super.call(
      "referralCodes",
      "referralCodes(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_referralCodes(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "referralCodes",
      "referralCodes(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  referralIds(param0: string): BigInt {
    let result = super.call("referralIds", "referralIds(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_referralIds(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("referralIds", "referralIds(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralOwner(param0: BigInt): Address {
    let result = super.call(
      "referralOwner",
      "referralOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_referralOwner(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "referralOwner",
      "referralOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usedReferralCodes(param0: Address): BigInt {
    let result = super.call(
      "usedReferralCodes",
      "usedReferralCodes(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_usedReferralCodes(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "usedReferralCodes",
      "usedReferralCodes(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateCodeCall extends ethereum.Call {
  get inputs(): CreateCodeCall__Inputs {
    return new CreateCodeCall__Inputs(this);
  }

  get outputs(): CreateCodeCall__Outputs {
    return new CreateCodeCall__Outputs(this);
  }
}

export class CreateCodeCall__Inputs {
  _call: CreateCodeCall;

  constructor(call: CreateCodeCall) {
    this._call = call;
  }

  get code(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateCodeCall__Outputs {
  _call: CreateCodeCall;

  constructor(call: CreateCodeCall) {
    this._call = call;
  }
}

export class RecoverTokenCall extends ethereum.Call {
  get inputs(): RecoverTokenCall__Inputs {
    return new RecoverTokenCall__Inputs(this);
  }

  get outputs(): RecoverTokenCall__Outputs {
    return new RecoverTokenCall__Outputs(this);
  }
}

export class RecoverTokenCall__Inputs {
  _call: RecoverTokenCall;

  constructor(call: RecoverTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RecoverTokenCall__Outputs {
  _call: RecoverTokenCall;

  constructor(call: RecoverTokenCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBaseCommissionsCall extends ethereum.Call {
  get inputs(): SetBaseCommissionsCall__Inputs {
    return new SetBaseCommissionsCall__Inputs(this);
  }

  get outputs(): SetBaseCommissionsCall__Outputs {
    return new SetBaseCommissionsCall__Outputs(this);
  }
}

export class SetBaseCommissionsCall__Inputs {
  _call: SetBaseCommissionsCall;

  constructor(call: SetBaseCommissionsCall) {
    this._call = call;
  }

  get _referralIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _commissions(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetBaseCommissionsCall__Outputs {
  _call: SetBaseCommissionsCall;

  constructor(call: SetBaseCommissionsCall) {
    this._call = call;
  }
}

export class SetReferralCodeByUserCall extends ethereum.Call {
  get inputs(): SetReferralCodeByUserCall__Inputs {
    return new SetReferralCodeByUserCall__Inputs(this);
  }

  get outputs(): SetReferralCodeByUserCall__Outputs {
    return new SetReferralCodeByUserCall__Outputs(this);
  }
}

export class SetReferralCodeByUserCall__Inputs {
  _call: SetReferralCodeByUserCall;

  constructor(call: SetReferralCodeByUserCall) {
    this._call = call;
  }

  get code(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetReferralCodeByUserCall__Outputs {
  _call: SetReferralCodeByUserCall;

  constructor(call: SetReferralCodeByUserCall) {
    this._call = call;
  }
}

export class ToggleGamesCall extends ethereum.Call {
  get inputs(): ToggleGamesCall__Inputs {
    return new ToggleGamesCall__Inputs(this);
  }

  get outputs(): ToggleGamesCall__Outputs {
    return new ToggleGamesCall__Outputs(this);
  }
}

export class ToggleGamesCall__Inputs {
  _call: ToggleGamesCall;

  constructor(call: ToggleGamesCall) {
    this._call = call;
  }

  get games(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get toggles(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class ToggleGamesCall__Outputs {
  _call: ToggleGamesCall;

  constructor(call: ToggleGamesCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateUserCall extends ethereum.Call {
  get inputs(): UpdateUserCall__Inputs {
    return new UpdateUserCall__Inputs(this);
  }

  get outputs(): UpdateUserCall__Outputs {
    return new UpdateUserCall__Outputs(this);
  }
}

export class UpdateUserCall__Inputs {
  _call: UpdateUserCall;

  constructor(call: UpdateUserCall) {
    this._call = call;
  }

  get player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get referralId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateUserCall__Outputs {
  _call: UpdateUserCall;

  constructor(call: UpdateUserCall) {
    this._call = call;
  }
}
