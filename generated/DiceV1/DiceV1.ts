// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DeductVRFFee extends ethereum.Event {
  get params(): DeductVRFFee__Params {
    return new DeductVRFFee__Params(this);
  }
}

export class DeductVRFFee__Params {
  _event: DeductVRFFee;

  constructor(event: DeductVRFFee) {
    this._event = event;
  }

  get paid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get est(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EmergencyHalted extends ethereum.Event {
  get params(): EmergencyHalted__Params {
    return new EmergencyHalted__Params(this);
  }
}

export class EmergencyHalted__Params {
  _event: EmergencyHalted;

  constructor(event: EmergencyHalted) {
    this._event = event;
  }
}

export class EmergencyStopped extends ethereum.Event {
  get params(): EmergencyStopped__Params {
    return new EmergencyStopped__Params(this);
  }
}

export class EmergencyStopped__Params {
  _event: EmergencyStopped;

  constructor(event: EmergencyStopped) {
    this._event = event;
  }
}

export class NewBet extends ethereum.Event {
  get params(): NewBet__Params {
    return new NewBet__Params(this);
  }
}

export class NewBet__Params {
  _event: NewBet;

  constructor(event: NewBet) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get asset(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fiatAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get betOn(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get referralId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class NewBetResult extends ethereum.Event {
  get params(): NewBetResult__Params {
    return new NewBetResult__Params(this);
  }
}

export class NewBetResult__Params {
  _event: NewBetResult;

  constructor(event: NewBetResult) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get randomness(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get win(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get result(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get betOn(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get betAsset(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get winAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get winFiatAmount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReceiveRandomness extends ethereum.Event {
  get params(): ReceiveRandomness__Params {
    return new ReceiveRandomness__Params(this);
  }
}

export class ReceiveRandomness__Params {
  _event: ReceiveRandomness;

  constructor(event: ReceiveRandomness) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get randomValues(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class RequestRandomness extends ethereum.Event {
  get params(): RequestRandomness__Params {
    return new RequestRandomness__Params(this);
  }
}

export class RequestRandomness__Params {
  _event: RequestRandomness;

  constructor(event: RequestRandomness) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get randomValues(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TopUpVRF extends ethereum.Event {
  get params(): TopUpVRF__Params {
    return new TopUpVRF__Params(this);
  }
}

export class TopUpVRF__Params {
  _event: TopUpVRF;

  constructor(event: TopUpVRF) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateBankroll extends ethereum.Event {
  get params(): UpdateBankroll__Params {
    return new UpdateBankroll__Params(this);
  }
}

export class UpdateBankroll__Params {
  _event: UpdateBankroll;

  constructor(event: UpdateBankroll) {
    this._event = event;
  }

  get newBankrollAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateChainlinkSettings extends ethereum.Event {
  get params(): UpdateChainlinkSettings__Params {
    return new UpdateChainlinkSettings__Params(this);
  }
}

export class UpdateChainlinkSettings__Params {
  _event: UpdateChainlinkSettings;

  constructor(event: UpdateChainlinkSettings) {
    this._event = event;
  }

  get coordinator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subscriptionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get keyHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get vrfPremium(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get callbackGasLimit(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UpdateFeeRouter extends ethereum.Event {
  get params(): UpdateFeeRouter__Params {
    return new UpdateFeeRouter__Params(this);
  }
}

export class UpdateFeeRouter__Params {
  _event: UpdateFeeRouter;

  constructor(event: UpdateFeeRouter) {
    this._event = event;
  }

  get newFeeRouterAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateGameSettings extends ethereum.Event {
  get params(): UpdateGameSettings__Params {
    return new UpdateGameSettings__Params(this);
  }
}

export class UpdateGameSettings__Params {
  _event: UpdateGameSettings;

  constructor(event: UpdateGameSettings) {
    this._event = event;
  }

  get houseEdge(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateGasStation extends ethereum.Event {
  get params(): UpdateGasStation__Params {
    return new UpdateGasStation__Params(this);
  }
}

export class UpdateGasStation__Params {
  _event: UpdateGasStation;

  constructor(event: UpdateGasStation) {
    this._event = event;
  }

  get newHarvester(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateGuardian extends ethereum.Event {
  get params(): UpdateGuardian__Params {
    return new UpdateGuardian__Params(this);
  }
}

export class UpdateGuardian__Params {
  _event: UpdateGuardian;

  constructor(event: UpdateGuardian) {
    this._event = event;
  }

  get guardianAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class UpdateMinBet extends ethereum.Event {
  get params(): UpdateMinBet__Params {
    return new UpdateMinBet__Params(this);
  }
}

export class UpdateMinBet__Params {
  _event: UpdateMinBet;

  constructor(event: UpdateMinBet) {
    this._event = event;
  }

  get newMinBetAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateReferral extends ethereum.Event {
  get params(): UpdateReferral__Params {
    return new UpdateReferral__Params(this);
  }
}

export class UpdateReferral__Params {
  _event: UpdateReferral;

  constructor(event: UpdateReferral) {
    this._event = event;
  }

  get newReferral(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateSwapImplementation extends ethereum.Event {
  get params(): UpdateSwapImplementation__Params {
    return new UpdateSwapImplementation__Params(this);
  }
}

export class UpdateSwapImplementation__Params {
  _event: UpdateSwapImplementation;

  constructor(event: UpdateSwapImplementation) {
    this._event = event;
  }

  get impl(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DiceV1__betsResult {
  value0: BigInt;
  value1: BigInt;
  value2: boolean;
  value3: Address;
  value4: Address;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: boolean;
  value10: boolean;
  value11: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: boolean,
    value3: Address,
    value4: Address,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: boolean,
    value10: boolean,
    value11: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }

  getTimestamp(): BigInt {
    return this.value0;
  }

  getBetId(): BigInt {
    return this.value1;
  }

  getSettled(): boolean {
    return this.value2;
  }

  getPlayer(): Address {
    return this.value3;
  }

  getAsset(): Address {
    return this.value4;
  }

  getAmount(): BigInt {
    return this.value5;
  }

  getBetOn(): BigInt {
    return this.value6;
  }

  getRandomId(): BigInt {
    return this.value7;
  }

  getResult(): BigInt {
    return this.value8;
  }

  getRefund(): boolean {
    return this.value9;
  }

  getFundsSent(): boolean {
    return this.value10;
  }

  getReferralId(): BigInt {
    return this.value11;
  }
}

export class DiceV1__chainlinkConfigResult {
  value0: BigInt;
  value1: Bytes;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: Bytes, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getSubscriptionId(): BigInt {
    return this.value0;
  }

  getKeyHash(): Bytes {
    return this.value1;
  }

  getVrfPremium(): BigInt {
    return this.value2;
  }

  getCallbackGasLimit(): BigInt {
    return this.value3;
  }
}

export class DiceV1__getBetResultValue0Struct extends ethereum.Tuple {
  get timestamp(): BigInt {
    return this[0].toBigInt();
  }

  get betId(): BigInt {
    return this[1].toBigInt();
  }

  get settled(): boolean {
    return this[2].toBoolean();
  }

  get player(): Address {
    return this[3].toAddress();
  }

  get asset(): Address {
    return this[4].toAddress();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get betOn(): BigInt {
    return this[6].toBigInt();
  }

  get randomId(): BigInt {
    return this[7].toBigInt();
  }

  get result(): BigInt {
    return this[8].toBigInt();
  }

  get refund(): boolean {
    return this[9].toBoolean();
  }

  get fundsSent(): boolean {
    return this[10].toBoolean();
  }

  get referralId(): BigInt {
    return this[11].toBigInt();
  }
}

export class DiceV1 extends ethereum.SmartContract {
  static bind(address: Address): DiceV1 {
    return new DiceV1("DiceV1", address);
  }

  bank(): Address {
    let result = super.call("bank", "bank():(address)", []);

    return result[0].toAddress();
  }

  try_bank(): ethereum.CallResult<Address> {
    let result = super.tryCall("bank", "bank():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  betCount(): BigInt {
    let result = super.call("betCount", "betCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_betCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("betCount", "betCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  betIds(param0: BigInt): BigInt {
    let result = super.call("betIds", "betIds(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_betIds(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("betIds", "betIds(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bets(param0: BigInt): DiceV1__betsResult {
    let result = super.call(
      "bets",
      "bets(uint256):(uint32,uint32,bool,address,address,uint256,uint256,uint256,uint256,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new DiceV1__betsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBoolean(),
      result[10].toBoolean(),
      result[11].toBigInt()
    );
  }

  try_bets(param0: BigInt): ethereum.CallResult<DiceV1__betsResult> {
    let result = super.tryCall(
      "bets",
      "bets(uint256):(uint32,uint32,bool,address,address,uint256,uint256,uint256,uint256,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DiceV1__betsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBoolean(),
        value[10].toBoolean(),
        value[11].toBigInt()
      )
    );
  }

  chainlinkConfig(): DiceV1__chainlinkConfigResult {
    let result = super.call(
      "chainlinkConfig",
      "chainlinkConfig():(uint64,bytes32,uint256,uint32)",
      []
    );

    return new DiceV1__chainlinkConfigResult(
      result[0].toBigInt(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_chainlinkConfig(): ethereum.CallResult<DiceV1__chainlinkConfigResult> {
    let result = super.tryCall(
      "chainlinkConfig",
      "chainlinkConfig():(uint64,bytes32,uint256,uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DiceV1__chainlinkConfigResult(
        value[0].toBigInt(),
        value[1].toBytes(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  gasStation(): Address {
    let result = super.call("gasStation", "gasStation():(address)", []);

    return result[0].toAddress();
  }

  try_gasStation(): ethereum.CallResult<Address> {
    let result = super.tryCall("gasStation", "gasStation():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBet(betId: BigInt): DiceV1__getBetResultValue0Struct {
    let result = super.call(
      "getBet",
      "getBet(uint256):((uint32,uint32,bool,address,address,uint256,uint256,uint256,uint256,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(betId)]
    );

    return changetype<DiceV1__getBetResultValue0Struct>(result[0].toTuple());
  }

  try_getBet(
    betId: BigInt
  ): ethereum.CallResult<DiceV1__getBetResultValue0Struct> {
    let result = super.tryCall(
      "getBet",
      "getBet(uint256):((uint32,uint32,bool,address,address,uint256,uint256,uint256,uint256,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiceV1__getBetResultValue0Struct>(value[0].toTuple())
    );
  }

  getVRFCost(): BigInt {
    let result = super.call("getVRFCost", "getVRFCost():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getVRFCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getVRFCost", "getVRFCost():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWinAmount(betAmount: BigInt, betSum: BigInt): BigInt {
    let result = super.call(
      "getWinAmount",
      "getWinAmount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(betAmount),
        ethereum.Value.fromUnsignedBigInt(betSum)
      ]
    );

    return result[0].toBigInt();
  }

  try_getWinAmount(
    betAmount: BigInt,
    betSum: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWinAmount",
      "getWinAmount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(betAmount),
        ethereum.Value.fromUnsignedBigInt(betSum)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  houseEdge(): BigInt {
    let result = super.call("houseEdge", "houseEdge():(uint256)", []);

    return result[0].toBigInt();
  }

  try_houseEdge(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("houseEdge", "houseEdge():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  linkPriceFeed(): Address {
    let result = super.call("linkPriceFeed", "linkPriceFeed():(address)", []);

    return result[0].toAddress();
  }

  try_linkPriceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "linkPriceFeed",
      "linkPriceFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  playerBets(param0: Address): BigInt {
    let result = super.call("playerBets", "playerBets(address):(uint32)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_playerBets(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("playerBets", "playerBets(address):(uint32)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referral(): Address {
    let result = super.call("referral", "referral():(address)", []);

    return result[0].toAddress();
  }

  try_referral(): ethereum.CallResult<Address> {
    let result = super.tryCall("referral", "referral():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  swapImp(): Address {
    let result = super.call("swapImp", "swapImp():(address)", []);

    return result[0].toAddress();
  }

  try_swapImp(): ethereum.CallResult<Address> {
    let result = super.tryCall("swapImp", "swapImp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _keyHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _callbackGasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _linkPriceFeed(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _bankAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _gasStation(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ChangeBankCall extends ethereum.Call {
  get inputs(): ChangeBankCall__Inputs {
    return new ChangeBankCall__Inputs(this);
  }

  get outputs(): ChangeBankCall__Outputs {
    return new ChangeBankCall__Outputs(this);
  }
}

export class ChangeBankCall__Inputs {
  _call: ChangeBankCall;

  constructor(call: ChangeBankCall) {
    this._call = call;
  }

  get newBank(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeBankCall__Outputs {
  _call: ChangeBankCall;

  constructor(call: ChangeBankCall) {
    this._call = call;
  }
}

export class ChangeGasStationCall extends ethereum.Call {
  get inputs(): ChangeGasStationCall__Inputs {
    return new ChangeGasStationCall__Inputs(this);
  }

  get outputs(): ChangeGasStationCall__Outputs {
    return new ChangeGasStationCall__Outputs(this);
  }
}

export class ChangeGasStationCall__Inputs {
  _call: ChangeGasStationCall;

  constructor(call: ChangeGasStationCall) {
    this._call = call;
  }

  get _gasStation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeGasStationCall__Outputs {
  _call: ChangeGasStationCall;

  constructor(call: ChangeGasStationCall) {
    this._call = call;
  }
}

export class ChangeReferralCall extends ethereum.Call {
  get inputs(): ChangeReferralCall__Inputs {
    return new ChangeReferralCall__Inputs(this);
  }

  get outputs(): ChangeReferralCall__Outputs {
    return new ChangeReferralCall__Outputs(this);
  }
}

export class ChangeReferralCall__Inputs {
  _call: ChangeReferralCall;

  constructor(call: ChangeReferralCall) {
    this._call = call;
  }

  get newReferral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeReferralCall__Outputs {
  _call: ChangeReferralCall;

  constructor(call: ChangeReferralCall) {
    this._call = call;
  }
}

export class PlaceBetCall extends ethereum.Call {
  get inputs(): PlaceBetCall__Inputs {
    return new PlaceBetCall__Inputs(this);
  }

  get outputs(): PlaceBetCall__Outputs {
    return new PlaceBetCall__Outputs(this);
  }
}

export class PlaceBetCall__Inputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }

  get player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get betAsset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get betAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get options(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get referralCode(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class PlaceBetCall__Outputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class RecoverTokensCall extends ethereum.Call {
  get inputs(): RecoverTokensCall__Inputs {
    return new RecoverTokensCall__Inputs(this);
  }

  get outputs(): RecoverTokensCall__Outputs {
    return new RecoverTokensCall__Outputs(this);
  }
}

export class RecoverTokensCall__Inputs {
  _call: RecoverTokensCall;

  constructor(call: RecoverTokensCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverTokensCall__Outputs {
  _call: RecoverTokensCall;

  constructor(call: RecoverTokensCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetChainlinkSettingsCall extends ethereum.Call {
  get inputs(): SetChainlinkSettingsCall__Inputs {
    return new SetChainlinkSettingsCall__Inputs(this);
  }

  get outputs(): SetChainlinkSettingsCall__Outputs {
    return new SetChainlinkSettingsCall__Outputs(this);
  }
}

export class SetChainlinkSettingsCall__Inputs {
  _call: SetChainlinkSettingsCall;

  constructor(call: SetChainlinkSettingsCall) {
    this._call = call;
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _subId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _keyHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _vrfPremium(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _callbackGasLimit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SetChainlinkSettingsCall__Outputs {
  _call: SetChainlinkSettingsCall;

  constructor(call: SetChainlinkSettingsCall) {
    this._call = call;
  }
}

export class SetGameSettingsCall extends ethereum.Call {
  get inputs(): SetGameSettingsCall__Inputs {
    return new SetGameSettingsCall__Inputs(this);
  }

  get outputs(): SetGameSettingsCall__Outputs {
    return new SetGameSettingsCall__Outputs(this);
  }
}

export class SetGameSettingsCall__Inputs {
  _call: SetGameSettingsCall;

  constructor(call: SetGameSettingsCall) {
    this._call = call;
  }

  get _edge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGameSettingsCall__Outputs {
  _call: SetGameSettingsCall;

  constructor(call: SetGameSettingsCall) {
    this._call = call;
  }
}

export class SetSwapImplCall extends ethereum.Call {
  get inputs(): SetSwapImplCall__Inputs {
    return new SetSwapImplCall__Inputs(this);
  }

  get outputs(): SetSwapImplCall__Outputs {
    return new SetSwapImplCall__Outputs(this);
  }
}

export class SetSwapImplCall__Inputs {
  _call: SetSwapImplCall;

  constructor(call: SetSwapImplCall) {
    this._call = call;
  }

  get impl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSwapImplCall__Outputs {
  _call: SetSwapImplCall;

  constructor(call: SetSwapImplCall) {
    this._call = call;
  }
}

export class SettleCall extends ethereum.Call {
  get inputs(): SettleCall__Inputs {
    return new SettleCall__Inputs(this);
  }

  get outputs(): SettleCall__Outputs {
    return new SettleCall__Outputs(this);
  }
}

export class SettleCall__Inputs {
  _call: SettleCall;

  constructor(call: SettleCall) {
    this._call = call;
  }

  get betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SettleCall__Outputs {
  _call: SettleCall;

  constructor(call: SettleCall) {
    this._call = call;
  }
}

export class TopUpCall extends ethereum.Call {
  get inputs(): TopUpCall__Inputs {
    return new TopUpCall__Inputs(this);
  }

  get outputs(): TopUpCall__Outputs {
    return new TopUpCall__Outputs(this);
  }
}

export class TopUpCall__Inputs {
  _call: TopUpCall;

  constructor(call: TopUpCall) {
    this._call = call;
  }
}

export class TopUpCall__Outputs {
  _call: TopUpCall;

  constructor(call: TopUpCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
